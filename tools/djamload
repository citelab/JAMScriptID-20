#!/bin/bash

# djam load file --target=prog --app=app_name

# We load the given file into the containers that are used by the target program
# and application.

die() {
    printf '%s\n' "$1" >&2
    exit 1
}

show_usage() {
    cat << EOF

djamload file.jxe --target=program --app=appl_name

This command will load the file.jxe in the docker containers that are already
running the target program under the given application name (appl_name).

If no running instance is found, an error message will be printed.

EOF
}

if [ -z $1 ]; then
    show_usage
    exit 0
fi


checkdocker() {

    if [ -e $1/dockerId ]; then
        local didp=`cat $1/dockerId`
        local present=`docker ps --filter id=$didp | grep $didp | wc -l | tr -d '[:space:]'`
        if [ $present == "1" ]; then
            running="docker"
        else
            running="none"
        fi
    fi
}


app=
target=
file=$1
shift

while :; do
    case $1 in
        -h|-\?|--help)
            show_usage      # Display a usage synopsis.
            exit
            ;;
        -a|--app)           # Takes an option argument; ensure it has been specified.
            if [ "$2" ]; then
                app=$2
                shift
            else
                die 'ERROR: "--app" requires a non-empty option argument.'
            fi
            ;;
        --app=?*)
            app=${1#*=}     # Delete everything up to "=" and assign the remainder.
            ;;
        --app=)             # Handle the case of an empty
            die 'ERROR: "--app" requires a non-empty option argument.'
            ;;

        -t|--target)           # Takes an option argument; ensure it has been specified.
            if [ "$2" ]; then
                target=$2
                shift
            else
                die 'ERROR: "--target" requires a non-empty option argument.'
            fi
            ;;
        --target=?*)
            target=${1#*=}     # Delete everything up to "=" and assign the remainder.
            ;;
        --target=)             # Handle the case of an empty
            die 'ERROR: "--target" requires a non-empty option argument.'
            ;;
        --)                 # End of all options.
            shift
            break
        ;;
        -?*)
            printf 'WARN: Unknown option (ignored): %s\n' "$1" >&2
            ;;
        *)               # Default case: No more options, so break out of the loop.
            break
    esac

    shift
done

# Check folder
jamfolder=$HOME"/__jamruns"
if [ ! -d $jamfolder ]; then
    die "ERROR! No running instance found. "
fi

if [ -z $target ]; then
    die "Target not specified.. cannot locate the running application."
fi

tname="${target%.*}"
tname=$tname"_"$app

if [ "$(ls -A $jamfolder)" ]; then

    cd $jamfolder

    for jruns in `ls $jamfolder/$tname`; do
        dir=$jamfolder/$tname/$jruns
        if [ -d $dir ]; then
            checkdocker $dir
            if [ $running == "docker" ]; then
                runon=`cat $dir/dockerId`
                docker cp $file $dbuildc:$file
            fi
        fi
    done
fi
