# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := liblibjam
### Generated for copy rule.
/usr/local/share/jam/lib/activity.h: TOOLSET := $(TOOLSET)
/usr/local/share/jam/lib/activity.h: $(srcdir)/lib/jamlib/activity.h FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += /usr/local/share/jam/lib/activity.h
/usr/local/share/jam/lib/base64.h: TOOLSET := $(TOOLSET)
/usr/local/share/jam/lib/base64.h: $(srcdir)/lib/jamlib/base64.h FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += /usr/local/share/jam/lib/base64.h
/usr/local/share/jam/lib/cborutils.h: TOOLSET := $(TOOLSET)
/usr/local/share/jam/lib/cborutils.h: $(srcdir)/lib/jamlib/cborutils.h FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += /usr/local/share/jam/lib/cborutils.h
/usr/local/share/jam/lib/comboptr.h: TOOLSET := $(TOOLSET)
/usr/local/share/jam/lib/comboptr.h: $(srcdir)/lib/jamlib/comboptr.h FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += /usr/local/share/jam/lib/comboptr.h
/usr/local/share/jam/lib/command.h: TOOLSET := $(TOOLSET)
/usr/local/share/jam/lib/command.h: $(srcdir)/lib/jamlib/command.h FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += /usr/local/share/jam/lib/command.h
/usr/local/share/jam/lib/core.h: TOOLSET := $(TOOLSET)
/usr/local/share/jam/lib/core.h: $(srcdir)/lib/jamlib/core.h FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += /usr/local/share/jam/lib/core.h
/usr/local/share/jam/lib/free_list.h: TOOLSET := $(TOOLSET)
/usr/local/share/jam/lib/free_list.h: $(srcdir)/lib/jamlib/free_list.h FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += /usr/local/share/jam/lib/free_list.h
/usr/local/share/jam/lib/jam.h: TOOLSET := $(TOOLSET)
/usr/local/share/jam/lib/jam.h: $(srcdir)/lib/jamlib/jam.h FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += /usr/local/share/jam/lib/jam.h
/usr/local/share/jam/lib/jamdata.h: TOOLSET := $(TOOLSET)
/usr/local/share/jam/lib/jamdata.h: $(srcdir)/lib/jamlib/jamdata.h FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += /usr/local/share/jam/lib/jamdata.h
/usr/local/share/jam/lib/jamdevices.h: TOOLSET := $(TOOLSET)
/usr/local/share/jam/lib/jamdevices.h: $(srcdir)/lib/jamlib/jamdevices.h FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += /usr/local/share/jam/lib/jamdevices.h
/usr/local/share/jam/lib/jcond.h: TOOLSET := $(TOOLSET)
/usr/local/share/jam/lib/jcond.h: $(srcdir)/lib/jamlib/jcond.h FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += /usr/local/share/jam/lib/jcond.h
/usr/local/share/jam/lib/jparser.h: TOOLSET := $(TOOLSET)
/usr/local/share/jam/lib/jparser.h: $(srcdir)/lib/jamlib/jparser.h FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += /usr/local/share/jam/lib/jparser.h
/usr/local/share/jam/lib/json.h: TOOLSET := $(TOOLSET)
/usr/local/share/jam/lib/json.h: $(srcdir)/lib/jamlib/json.h FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += /usr/local/share/jam/lib/json.h
/usr/local/share/jam/lib/mqtt.h: TOOLSET := $(TOOLSET)
/usr/local/share/jam/lib/mqtt.h: $(srcdir)/lib/jamlib/mqtt.h FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += /usr/local/share/jam/lib/mqtt.h
/usr/local/share/jam/lib/nvoid.h: TOOLSET := $(TOOLSET)
/usr/local/share/jam/lib/nvoid.h: $(srcdir)/lib/jamlib/nvoid.h FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += /usr/local/share/jam/lib/nvoid.h
/usr/local/share/jam/lib/pushqueue.h: TOOLSET := $(TOOLSET)
/usr/local/share/jam/lib/pushqueue.h: $(srcdir)/lib/jamlib/pushqueue.h FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += /usr/local/share/jam/lib/pushqueue.h
/usr/local/share/jam/lib/semqueue.h: TOOLSET := $(TOOLSET)
/usr/local/share/jam/lib/semqueue.h: $(srcdir)/lib/jamlib/semqueue.h FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += /usr/local/share/jam/lib/semqueue.h
/usr/local/share/jam/lib/simplelist.h: TOOLSET := $(TOOLSET)
/usr/local/share/jam/lib/simplelist.h: $(srcdir)/lib/jamlib/simplelist.h FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += /usr/local/share/jam/lib/simplelist.h
/usr/local/share/jam/lib/simplequeue.h: TOOLSET := $(TOOLSET)
/usr/local/share/jam/lib/simplequeue.h: $(srcdir)/lib/jamlib/simplequeue.h FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += /usr/local/share/jam/lib/simplequeue.h
/usr/local/share/jam/lib/socket.h: TOOLSET := $(TOOLSET)
/usr/local/share/jam/lib/socket.h: $(srcdir)/lib/jamlib/socket.h FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += /usr/local/share/jam/lib/socket.h
/usr/local/share/jam/lib/threadsem.h: TOOLSET := $(TOOLSET)
/usr/local/share/jam/lib/threadsem.h: $(srcdir)/lib/jamlib/threadsem.h FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += /usr/local/share/jam/lib/threadsem.h
/usr/local/share/jam/lib/timer.h: TOOLSET := $(TOOLSET)
/usr/local/share/jam/lib/timer.h: $(srcdir)/lib/jamlib/timer.h FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += /usr/local/share/jam/lib/timer.h
/usr/local/share/jam/lib/uuid4.h: TOOLSET := $(TOOLSET)
/usr/local/share/jam/lib/uuid4.h: $(srcdir)/lib/jamlib/uuid4.h FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += /usr/local/share/jam/lib/uuid4.h
/usr/local/share/jam/deps/fake_libc_include: TOOLSET := $(TOOLSET)
/usr/local/share/jam/deps/fake_libc_include: $(srcdir)/deps/fake_libc_include FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += /usr/local/share/jam/deps/fake_libc_include
/usr/local/lib/libtask.a: TOOLSET := $(TOOLSET)
/usr/local/lib/libtask.a: $(builddir)/libtask.a FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += /usr/local/lib/libtask.a
/usr/local/include/task.h: TOOLSET := $(TOOLSET)
/usr/local/include/task.h: $(srcdir)/deps/libtask/task.h FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += /usr/local/include/task.h
binding_gyp_liblibjam_target_copies = /usr/local/share/jam/lib/activity.h /usr/local/share/jam/lib/base64.h /usr/local/share/jam/lib/cborutils.h /usr/local/share/jam/lib/comboptr.h /usr/local/share/jam/lib/command.h /usr/local/share/jam/lib/core.h /usr/local/share/jam/lib/free_list.h /usr/local/share/jam/lib/jam.h /usr/local/share/jam/lib/jamdata.h /usr/local/share/jam/lib/jamdevices.h /usr/local/share/jam/lib/jcond.h /usr/local/share/jam/lib/jparser.h /usr/local/share/jam/lib/json.h /usr/local/share/jam/lib/mqtt.h /usr/local/share/jam/lib/nvoid.h /usr/local/share/jam/lib/pushqueue.h /usr/local/share/jam/lib/semqueue.h /usr/local/share/jam/lib/simplelist.h /usr/local/share/jam/lib/simplequeue.h /usr/local/share/jam/lib/socket.h /usr/local/share/jam/lib/threadsem.h /usr/local/share/jam/lib/timer.h /usr/local/share/jam/lib/uuid4.h /usr/local/share/jam/deps/fake_libc_include /usr/local/lib/libtask.a /usr/local/include/task.h

DEFS_Debug := \
	'-DNODE_GYP_MODULE_NAME=liblibjam' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-DV8_DEPRECATION_WARNINGS' \
	'-DV8_IMMINENT_DEPRECATION_WARNINGS' \
	'-D_DARWIN_USE_64_BIT_INODE=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DOPENSSL_NO_PINSHARED' \
	'-DOPENSSL_THREADS' \
	'-DDEBUG' \
	'-D_DEBUG' \
	'-DV8_ENABLE_CHECKS'

# Flags passed to all source files.
CFLAGS_Debug := \
	-O0 \
	-gdwarf-2 \
	-mmacosx-version-min=10.10 \
	-arch x86_64 \
	-Wall \
	-Wendif-labels \
	-W \
	-Wno-unused-parameter

# Flags passed to only C files.
CFLAGS_C_Debug := \
	-fno-strict-aliasing \
	-c \
	-O1 \
	-g \
	-fsanitize=address \
	-fno-omit-frame-pointer

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-std=gnu++1y \
	-stdlib=libc++ \
	-fno-rtti \
	-fno-exceptions \
	-fno-strict-aliasing \
	-c \
	-O1 \
	-g \
	-fsanitize=address \
	-fno-omit-frame-pointer

# Flags passed to only ObjC files.
CFLAGS_OBJC_Debug :=

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Debug :=

INCS_Debug := \
	-I/Users/maheswar/Library/Caches/node-gyp/13.11.0/include/node \
	-I/Users/maheswar/Library/Caches/node-gyp/13.11.0/src \
	-I/Users/maheswar/Library/Caches/node-gyp/13.11.0/deps/openssl/config \
	-I/Users/maheswar/Library/Caches/node-gyp/13.11.0/deps/openssl/openssl/include \
	-I/Users/maheswar/Library/Caches/node-gyp/13.11.0/deps/uv/include \
	-I/Users/maheswar/Library/Caches/node-gyp/13.11.0/deps/zlib \
	-I/Users/maheswar/Library/Caches/node-gyp/13.11.0/deps/v8/include

DEFS_Release := \
	'-DNODE_GYP_MODULE_NAME=liblibjam' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-DV8_DEPRECATION_WARNINGS' \
	'-DV8_IMMINENT_DEPRECATION_WARNINGS' \
	'-D_DARWIN_USE_64_BIT_INODE=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DOPENSSL_NO_PINSHARED' \
	'-DOPENSSL_THREADS'

# Flags passed to all source files.
CFLAGS_Release := \
	-O3 \
	-gdwarf-2 \
	-mmacosx-version-min=10.10 \
	-arch x86_64 \
	-Wall \
	-Wendif-labels \
	-W \
	-Wno-unused-parameter

# Flags passed to only C files.
CFLAGS_C_Release := \
	-fno-strict-aliasing

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-std=gnu++1y \
	-stdlib=libc++ \
	-fno-rtti \
	-fno-exceptions \
	-fno-strict-aliasing

# Flags passed to only ObjC files.
CFLAGS_OBJC_Release :=

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Release :=

INCS_Release := \
	-I/Users/maheswar/Library/Caches/node-gyp/13.11.0/include/node \
	-I/Users/maheswar/Library/Caches/node-gyp/13.11.0/src \
	-I/Users/maheswar/Library/Caches/node-gyp/13.11.0/deps/openssl/config \
	-I/Users/maheswar/Library/Caches/node-gyp/13.11.0/deps/openssl/openssl/include \
	-I/Users/maheswar/Library/Caches/node-gyp/13.11.0/deps/uv/include \
	-I/Users/maheswar/Library/Caches/node-gyp/13.11.0/deps/zlib \
	-I/Users/maheswar/Library/Caches/node-gyp/13.11.0/deps/v8/include

OBJS := \
	$(obj).target/$(TARGET)/lib/jamlib/activity.o \
	$(obj).target/$(TARGET)/lib/jamlib/base64.o \
	$(obj).target/$(TARGET)/lib/jamlib/cborutils.o \
	$(obj).target/$(TARGET)/lib/jamlib/comboptr.o \
	$(obj).target/$(TARGET)/lib/jamlib/command.o \
	$(obj).target/$(TARGET)/lib/jamlib/core.o \
	$(obj).target/$(TARGET)/lib/jamlib/free_list.o \
	$(obj).target/$(TARGET)/lib/jamlib/jam.o \
	$(obj).target/$(TARGET)/lib/jamlib/jamasync.o \
	$(obj).target/$(TARGET)/lib/jamlib/jamdata.o \
	$(obj).target/$(TARGET)/lib/jamlib/jamdevices.o \
	$(obj).target/$(TARGET)/lib/jamlib/jamrunner.o \
	$(obj).target/$(TARGET)/lib/jamlib/jamsync.o \
	$(obj).target/$(TARGET)/lib/jamlib/jamworker.o \
	$(obj).target/$(TARGET)/lib/jamlib/jcond.o \
	$(obj).target/$(TARGET)/lib/jamlib/jparser.o \
	$(obj).target/$(TARGET)/lib/jamlib/json.o \
	$(obj).target/$(TARGET)/lib/jamlib/mqtt.o \
	$(obj).target/$(TARGET)/lib/jamlib/nvoid.o \
	$(obj).target/$(TARGET)/lib/jamlib/pushqueue.o \
	$(obj).target/$(TARGET)/lib/jamlib/semqueue.o \
	$(obj).target/$(TARGET)/lib/jamlib/simplelist.o \
	$(obj).target/$(TARGET)/lib/jamlib/simplequeue.o \
	$(obj).target/$(TARGET)/lib/jamlib/socket.o \
	$(obj).target/$(TARGET)/lib/jamlib/threadsem.o \
	$(obj).target/$(TARGET)/lib/jamlib/timer.o \
	$(obj).target/$(TARGET)/lib/jamlib/uuid4.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# Make sure our actions/rules run before any of us.
$(OBJS): | $(binding_gyp_liblibjam_target_copies)

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))
$(OBJS): GYP_OBJCFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE)) $(CFLAGS_OBJC_$(BUILDTYPE))
$(OBJS): GYP_OBJCXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE)) $(CFLAGS_OBJCC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

# End of this set of suffix rules
### Rules for final target.
# Build our special outputs first.
$(builddir)/libjam.a: | $(binding_gyp_liblibjam_target_copies)

# Preserve order dependency of special output on deps.
$(binding_gyp_liblibjam_target_copies): | 

LDFLAGS_Debug := \
	-mmacosx-version-min=10.10 \
	-arch x86_64 \
	-L$(builddir) \
	-stdlib=libc++

LIBTOOLFLAGS_Debug :=

LDFLAGS_Release := \
	-mmacosx-version-min=10.10 \
	-arch x86_64 \
	-L$(builddir) \
	-stdlib=libc++

LIBTOOLFLAGS_Release :=

LIBS :=

$(builddir)/libjam.a: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(builddir)/libjam.a: LIBS := $(LIBS)
$(builddir)/libjam.a: GYP_LIBTOOLFLAGS := $(LIBTOOLFLAGS_$(BUILDTYPE))
$(builddir)/libjam.a: TOOLSET := $(TOOLSET)
$(builddir)/libjam.a: $(OBJS) FORCE_DO_CMD
	$(call do_cmd,alink)

all_deps += $(builddir)/libjam.a
# Add target alias
.PHONY: liblibjam
liblibjam: $(builddir)/libjam.a

# Add target alias to "all" target.
.PHONY: all
all: liblibjam

# Add target alias
.PHONY: liblibjam
liblibjam: $(builddir)/libjam.a

# Short alias for building this static library.
.PHONY: libjam.a
libjam.a: $(builddir)/libjam.a

# Add static library to "all" target.
.PHONY: all
all: $(builddir)/libjam.a

